"prbs_generator.py"

import time
from dec2bin import dec2bin
import numpy as np
import seaborn as sns;

sns.set_theme()

start_time = time.time()


def prbs_generator(num_PRBS, deg, num_pol, zero_pad):
    """This function generates pseudo-random binary sequences (PRBS)"""

    "Inputs"
    # - num_PRBS = number of PRBS to be generated

    # - deg = desired degree for the PRBS: the resulting length of the PRBS
    # It will be 2^deg - 1
    # Must be in the range [5,28]

    # - num_pol = number of the first generating polynomial adopted.
    # The resulting adopted polynomials are in the range [num_pol : (num_pol + num_PRBS - 1)]
    # Must be in the range [1,max_num_pol], where max_num_pol is the maximum
    # available polynomial number ( = 176 )

    # Optional:
    # - zero_pad: if true add zero at the end to make the length of the PRBS
    # equal to 2^deg
    #
    # NOTICE:
    # - if the above range contains one or more "all 0" polynomials,
    # the function looks for further polynomials different from "all 0".
    # Hence, the above range may be extended.
    # In case the search exceeds the maximum available polynomial
    # number ( = 176 ), the function loops and begins again
    # the search from num_pol = 1, until it reaches the value (num_pol - 1).
    #
    # - In case at the end of the search the number of PRBS generated is
    # lower than num_PRBS, i.e., there are not enough primitive
    # polynomials different from "all 0", the function returns ERROR message.

    # Outputs:
    #
    # - data = matrix of (2^deg - 1) x num_PRBS elements containing the PRBS.
    #
    # - err_flag = error flag is 1 if errors occur
    #
    # Written by Andrea Arduino for Matlab

    # initialize data value
    data = 0

    # "zero pad"
    # if len(kwargs) < 4:
    #     zero_pad = False
    # else:
    #     zero_pad = True

    "Degree value control"
    min_deg = 5
    max_deg = 28
    err_flag = 0

    if deg < min_deg or deg > max_deg:
        print('ERROR: degree must be an integer value in the range [5,28]')
        data = np.nan
        err_flag = 1
        return data, err_flag

    "K contains the generating polynomials"
    # Note that on each row are represented, in octal notation, the
    # primitive polynomials for the degrees going from 5 (left) to 28 (rigth)
    #
    # Each column contains all the different primitive polynomials of a fixed degree
    K = [
        '45,103,203,435,1021,2011,4005,10123,20033,42103,100003,210013,400011,1000201,2000047,4000011,10000005,20000003,40000041,100000207,200000011,400000107,1000000047,2000000011,',
        '51,133,211,453,1033,2033,4027,11015,21103,44103,102043,307107,400017,1703601,2020471,6000031,10040205,20001043,40000063,125245661,200000017,430216473,1250025757,2104210431,',
        '57,141,217,455,1041,2047,4053,11271,22203,40123,110013,201735,600013,1115701,3610353,4442235,11111115,22222223,41224445,113763063,200014731,473167545,1037530241,2020006031,',
        '67,147,221,515,1055,2055,4055,10175,20123,40137,100055,200123,400055,1000173,2000123,4000151,10000145,20000303,40000053,100000333,200000201,400000341,1000000353,2000000341,',
        '73,155,235,537,1063,2145,4107,10231,20145,40173,100065,200275,400063,1000047,2000131,4000173,10000157,20000451,40000077,100000365,200000223,400000365,1000000451,2000000547,',
        '75,163,247,543,1137,2157,4143,10321,20157,40251,100137,200327,400077,1000333,2000143,4000363,10000173,20000541,40000115,100000445,200000305,400000431,1000000461,2000000563,',
        '00,000,253,545,1151,2201,4145,10353,20213,40257,100167,200457,400101,1000347,2000157,4000547,10000175,20000563,40000145,100000577,200000377,400000473,1000000535,2000000737,',
        '00,000,271,551,1157,2213,4161,10407,20215,40273,100201,200475,400125,1000355,2000175,4000555,10000223,20000617,40000167,100000665,200000415,400000555,1000000555,2000001001,',
        '00,000,277,561,1167,2305,4173,10437,20237,40275,100207,200517,400151,1000407,2000223,4000577,10000267,20000663,40000207,100000713,200000475,400000577,1000000571,2000001043,',
        '00,000,301,607,1175,2327,4215,10443,20245,40317,100223,200535,400173,1000517,2000257,4000617,10000407,20000761,40000213,100001045,200000505,400000603,1000000603,2000001263,',
        '00,000,313,615,1207,2347,4225,10473,20257,40353,100245,200627,400215,1000621,2000341,4000677,10000437,20000071,40000231,100001121,200000563,400000611,1000000743,2000001331,',
        '00,000,323,651,1225,2363,4237,10517,20273,40363,100303,200641,400231,1000743,2000503,4001043,10000473,20001147,40000243,100001127,200000627,400000677,1000001045,2000001441,',
        '00,000,325,703,1243,2377,4251,10527,20275,40415,100317,200655,400243,1000751,2000541,4001051,10000511,20001255,40000275,100001155,200000641,400000743,1000001051,2000001471,',
        '00,000,345,717,1245,2415,4261,10541,20303,40423,100335,200677,400257,1000757,2000553,4001061,10000517,20001265,40000305,100001543,200000655,400001023,1000001067,2000001531,',
        '00,000,357,747,1257,2431,4317,10553,20311,40473,100347,200707,400273,1001013,2000565,4001271,10000555,20001405,40000363,100001551,200000671,400001073,1000001121,2000001561,',
        '00,000,361,765,1267,2443,4321,10605,20341,40503,100365,201025,400305,1001023,2000605,4001463,10000563,20001421,40000371,100001657,200000723,400001105,1000001211,2000001661,',
        '00,000,367,000,1275,2461,4341,10663,20363,40633,100401,201031,400365,1001141,2000635,4001523,10000605,20001513,40000457,100001703,200000737,400001163,1000001405,2000002013,',
        '00,000,375,000,1317,2475,4347,10731,20415,40635,100425,201045,400413,1001165,2000641,4001531,10000627,20001551,40000473,100001717,200000751,400001205,1000001525,2000002051,',
        '00,000,000,000,1321,2503,4353,10737,20425,40647,100445,201057,400415,1001253,2000655,4001557,10000635,20001601,40000533,100001763,200001025,400001235,1000001551,2000002057,',
        '00,000,000,000,1333,2527,4365,10151,20451,40655,100527,201135,400431,1001361,2000663,4001703,10000647,20001667,40000541,100002031,200001043,400001253,1000001573,2000002255,',
        '00,000,000,000,1365,2553,4415,11067,20457,40665,100535,201155,400445,1001427,2000677,4001765,10000653,20001717,40000547,100002103,200001061,400001271,1000001643,2000002265,',
        '00,000,000,000,1371,2605,4423,11075,20473,40725,100541,201205,400475,1001453,2000707,4001777,10000665,20001727,40000603,100002111,200001211,400001361,1000001651,2000002375,',
        '00,000,000,000,1423,2617,4445,11147,20503,40731,100555,201221,400527,1001455,2000715,4002043,10000671,20001733,40000611,100002573,200001301,400001373,1000001717,2000002455,',
        '00,000,000,000,1425,2627,4451,11163,20547,40761,100605,201241,400541,1001567,2000737,4002205,10000743,20002023,40000767,100003123,200001313,400001501,1000002007,2000002703,',
        '00,000,000,000,1437,2641,4473,11177,20553,41015,100641,201345,400547,1001607,2001013,4002227,10000757,20002163,40001001,100003213,200001337,400001513,1000002061,2000002727,',
        '00,000,000,000,1443,2707,4475,10173,20571,41127,100647,201435,400555,1001625,2001023,4002301,10001031,20002211,40001037,100003275,200001345,400001667,1000002117,2000002753,',
        '00,000,000,000,1461,2745,4505,11301,20611,41141,100671,201513,400577,1001631,2001031,4002307,10001045,20002345,40001045,100003517,200001373,400001711,1000002133,2000003021,',
        '00,000,000,000,1473,2767,4511,11313,20627,41177,100713,201551,400603,1001651,2001045,4002315,10001067,20002417,40001111,100003521,200001405,400001771,1000002135,2000003077,',
        '00,000,000,000,1517,2773,4521,11417,20635,41205,100715,201561,400701,1001661,2001061,4002351,10001075,20002433,40001117,100003617,200001427,400002051,1000002205,2000003151,',
        '00,000,000,000,1533,3023,4533,11435,20677,41235,100737,201607,400707,1001705,2001117,4002411,10001133,20002477,40001127,100004045,200001441,400002073,1000002233,2000003175,',
        '00,000,000,000,1541,3025,4563,11441,20701,41307,100775,201615,400713,1001727,2001121,4002453,10001163,20002507,40001133,100004067,200001471,400002211,1000002265,2000003261,',
        '00,000,000,000,1553,3045,4565,11471,20707,41313,101023,201637,400731,1001741,2001153,4002637,10001255,20002573,40001155,100004105,200001513,400002227,1000002357,2000003267,',
        '00,000,000,000,1555,3067,4577,11477,20715,41315,101073,201643,400761,1002031,2001155,4002755,10001323,20002607,40001171,100004127,200001515,400002233,1000002441,2000003377,',
        '00,000,000,000,1563,3103,4603,11515,20737,41343,101105,200077,401015,1002061,2001203,4002763,10001411,20002615,40001217,100004235,200001537,400002241,1000002513,2000003401,',
        '00,000,000,000,1577,3117,4617,11561,20743,41351,101177,201771,401043,1002075,2001205,4003005,10001433,20002631,40001221,100004247,200001557,400002351,1000002525,2000003415,',
        '00,000,000,000,1605,3133,4653,11631,20761,41357,101211,202051,401051,1002133,2001227,4003053,10001523,20002673,40001271,100004375,200001705,400002435,1000002557,2000003621,',
        '00,000,000,000,1617,3171,4655,11643,20773,41411,101217,202127,401061,1002171,2001241,4003071,10001543,20003027,40001337,100004403,200001753,400002575,1000002601,2000003627,',
        '00,000,000,000,1665,3177,4671,11651,21031,41441,101233,202147,401067,1002211,2001441,4003125,10001567,20003033,40001357,100004675,200001771,400002613,1000002645,2000003715,',
        '00,000,000,000,1671,3211,4707,12007,21045,41477,101313,202203,401105,1002241,2001507,4003161,10001637,20003145,40001403,100004733,200002013,400002667,1000002661,2000004165,',
        '00,000,000,000,1707,3265,4731,12061,21067,41575,101331,202211,401153,1002441,2001551,4003173,10001643,20003213,40001447,100004755,200002015,400002705,1000002741,2000004211,',
        '00,000,000,000,1713,3301,4745,12067,21075,41607,101427,202221,401171,1002623,2001557,4003267,10001657,20003261,40001455,100005017,200002163,400003107,1000002753,2000004227,',
        '00,000,000,000,1715,3323,4767,12117,20047,41625,101433,202277,401177,1002637,2001637,4003335,10001673,20003303,40001501,100005101,200002277,400003143,1000002771,2000004255,',
        '00,000,000,000,1725,3337,5001,12135,21133,41657,101453,202301,401203,1002705,2001645,4003363,10001705,20003333,40001545,100005107,200002325,400003173,1000003065,2000004373,',
        '00,000,000,000,1731,3375,5007,12147,21135,41711,101463,202463,401221,1002733,2001651,4003425,10001735,20003461,40001643,100005173,200002345,400003215,1000003071,2000004433,',
        '00,000,000,000,1743,3427,5023,12165,21171,41753,101507,202507,401265,1002741,2001711,4003467,10002025,20003553,40001645,100005273,200002367,400003225,1000003131,2000004465,',
        '00,000,000,000,1751,3435,5025,12247,21177,41755,101515,202551,401307,1002777,2001727,4003511,10002031,20003577,40001661,100005363,200002375,400003355,1000003201,2000004545,',
        '00,000,000,000,1773,3441,5051,12255,21211,42013,101537,202607,401337,1003011,2001733,4003571,10002043,20003605,40001675,100005401,200002417,400003377,1000003231,2000004567,',
        '00,000,000,000,1131,3471,5111,12323,21227,40053,101543,202703,401343,1003035,2001735,4003737,10002111,20003707,40001755,100005437,200002441,400003407,1000003251,2000004645,',
        '00,000,000,000,0000,3507,5141,12417,21233,42163,101551,202735,401351,1003053,2001763,4003767,10002135,20003731,40002015,100005451,200002455,400003413,1000003273,2000004657,',
        '00,000,000,000,0000,3515,5155,12435,21263,42323,101561,202753,401375,1003175,2002067,4004031,10002165,20003773,40002051,100005467,200002477,400003431,1000003475,2000004721,',
        '00,000,000,000,0000,3525,5171,12515,21277,42325,101613,203101,401411,1003215,2002121,4004051,10002221,20004007,40002121,100005505,200002507,400003461,1000003517,2000005035,',
        '00,000,000,000,0000,3531,5177,12623,21315,42337,101631,203113,401421,1003451,2002165,4004067,10002227,20004051,40002217,100005511,200002551,400003467,1000003527,2000005251,',
        '00,000,000,000,0000,3543,5205,12705,21357,42343,101657,203123,401427,1003461,2002177,4004103,10002247,20004117,40002301,100005521,200002561,400003475,1000003547,2000005311,',
        '00,000,000,000,0000,3575,5221,12727,21367,42373,101675,203213,401433,1003521,2002211,4004221,10002345,20004147,40002337,100005565,200002661,400003517,1000003553,2000005327,',
        '00,000,000,000,0000,3615,5235,12735,21373,42453,101705,203303,401447,1003677,2002221,4004233,10002351,20004227,40002447,100005655,200002717,400003655,1000003563,2000005363,',
        '00,000,000,000,0000,3623,5247,12753,21405,42471,101721,203553,401463,1003715,2002265,4004255,10002357,20004263,40002453,100005725,200002727,400004051,1000003677,2000005371,',
        '00,000,000,000,0000,3661,5253,13011,21447,42531,102031,203555,401465,1003761,2002271,4004277,10002375,20004301,40002501,100006005,200002747,400004067,1000003707,2000005457,',
        '00,000,000,000,0000,3733,5263,13107,21453,42557,100021,203571,401523,1004001,2002323,4004433,10002417,20004307,40002557,100006047,200003041,400004103,1000003751,2000005533,',
        '00,000,000,000,0000,3763,5265,13125,21507,42631,102057,203603,401567,1004073,2002331,4004463,10002453,20004403,40002645,100006335,200003063,400004133,1000004037,2000005603,',
        '00,000,000,000,0000,3771,5325,13131,21525,42637,102061,203761,401661,1004163,2002435,4004471,10002525,20004477,40002651,100006377,200003101,400004277,1000004127,2000005605,',
        '00,000,000,000,0000,0000,5337,13245,21531,42645,102067,204015,401667,1004205,2002453,4004515,10002667,20004575,40002705,100006467,200003137,400004301,1000004155,2000005715,',
        '00,000,000,000,0000,0000,5351,13275,21557,42667,102147,204141,401703,1004313,2002471,4004573,10002727,20004615,40002741,100006553,200003151,400004345,1000004247,2000005757,',
        '00,000,000,000,0000,0000,5357,13425,21561,42705,102155,204277,401721,1004337,2002501,4004615,10002741,20004657,40003021,100006715,200003173,400004357,1000004343,2000006011,',
        '00,000,000,000,0000,0000,5361,13431,21575,42727,102171,204325,401733,1004357,2002523,4004631,10002753,20004673,40003035,100006723,200003223,400004411,1000004351,2000006305,',
        '00,000,000,000,0000,0000,5373,13503,21607,42747,102203,204337,401753,1004375,2002537,4004657,10002755,20004703,40003137,100006737,200003267,400004417,1000004433,2000006321,',
        '00,000,000,000,0000,0000,5403,13505,21615,42763,102227,204343,402007,1004405,2002561,4004717,10003021,20004705,40003143,100006751,200003303,400004453,1000004463,2000006437,',
        '00,000,000,000,0000,0000,5411,13565,21625,42777,102241,204361,402025,1004447,2002567,4004735,10003077,20004733,40003201,100007025,200003355,400004631,1000004515,2000006473,',
        '00,000,000,000,0000,0000,5421,13611,21643,43017,102265,204373,402031,1004455,2002651,4004741,10003123,20004765,40003273,100007141,200003371,400004661,1000004545,2000006565,',
        '00,000,000,000,0000,0000,5463,13655,21651,43035,102337,204471,402037,1004545,2002673,4005011,10003213,20005053,40003305,100007263,200003415,400004675,1000004573,2000006635,',
        '00,000,000,000,0000,0000,5477,13663,21661,43047,102367,204575,402057,1004573,2002721,4005047,10003273,20005071,40003333,100007277,200003445,400005065,1000004643,2000006767,',
        '00,000,000,000,0000,0000,5501,13677,21667,43065,102375,204613,402075,1004623,2002727,4005065,10003303,20005175,40003335,100007453,200003461,400005175,1000004667,2000007037,',
        '00,000,000,000,0000,0000,5513,13701,21673,43107,102435,204645,402103,1004643,2002735,4005115,10003327,20005225,40003355,100007575,200003467,400005267,1000004717,2000007111,',
        '00,000,000,000,0000,0000,5531,14127,21741,43131,102441,204657,402127,1004645,2002753,4005123,10003341,20005237,40003363,100007675,200003473,400005365,1000004733,2000007117,',
        '00,000,000,000,0000,0000,5537,14135,21755,43143,102447,204703,402135,1004711,2002765,4005151,10003377,20005335,40003423,100007711,200003621,400005401,1000004753,2000007153,',
        '00,000,000,000,0000,0000,5545,14221,21771,43161,102463,204705,402141,1004717,2002771,4005207,10003503,20005353,40003425,100010015,200003635,400005423,1000005017,2000007513,',
        '00,000,000,000,0000,0000,5557,14227,22013,43173,102507,204747,402147,1005035,2003011,4005225,10003535,20005355,40003443,100010057,200003665,400005445,1000005035,2000007523,',
        '00,000,000,000,0000,0000,5575,14271,22023,43245,102513,204763,402165,1005213,2003021,4005261,10003553,20005371,40003467,100010247,200003671,400005517,1000005125,2000007537,',
        '00,000,000,000,0000,0000,5607,14357,22037,43305,102537,205175,402205,1005225,2003063,4005321,10003565,20005423,40003577,100010307,200003713,400005571,1000005151,2000007667,',
        '00,000,000,000,0000,0000,5613,14433,22045,43317,102561,205201,402217,1005305,2003101,4005365,10003627,20005511,40003641,100010515,200003725,400005577,1000005213,2000007747,',
        '00,000,000,000,0000,0000,5623,14465,22051,43333,102573,205273,402235,1005317,2003113,4005571,10003653,20005533,40003665,100010643,200003743,400005605,1000005231,2000007755,',
        '00,000,000,000,0000,0000,5625,14501,22075,43461,102601,205305,402253,1005327,2003115,4005603,10003663,20005547,40003737,100010657,200003773,400005653,1000005243,2000007777,',
        '00,000,000,000,0000,0000,5657,14545,22121,43517,102615,205401,402271,1005341,2003137,4005725,10003701,20005555,40003745,100010717,200004127,400005665,1000005305,2000010007,',
        '00,000,000,000,0000,0000,5667,14573,22127,43577,102643,205423,402301,1005365,2003145,4005731,10003715,20005565,40003767,100010747,200004135,400005707,1000005335,2000010133,',
        '00,000,000,000,0000,0000,5675,14613,22141,43647,102661,205425,402315,1005431,2003207,4006021,10003723,20005577,40003773,100010771,200004165,400005743,1000005457,2000010153,',
        '00,000,000,000,0000,0000,5711,14661,22155,43701,102705,205521,402367,1005451,2003213,4006157,10004015,20005731,40004073,100011027,200004211,400006017,1000005475,2000010155,',
        '00,000,000,000,0000,0000,5733,14675,22177,43745,102711,205535,402373,1005473,2003275,4006267,10004023,20005737,40004075,100011055,200004235,400006021,1000005511,2000010247,',
        '00,000,000,000,0000,0000,5735,14711,20065,43751,102733,205715,402433,1005521,2003303,4006473,10004025,20006055,40004133,100011167,200004323,400006131,1000005577,2000010447,',
        '00,000,000,000,0000,0000,5747,14717,22233,43757,102755,205723,402435,1005547,2003321,4006475,10004117,20006107,40004177,100011347,200004325,400006157,1000005647,2000010705,',
        '00,000,000,000,0000,0000,5755,14747,22235,44023,102763,205745,402447,1005603,2003347,4006641,10004141,20006151,40004211,100011761,200004361,400006213,1000005655,2000011017,',
        '00,000,000,000,0000,0000,6013,15033,22265,44031,103011,206017,402465,1005707,2003355,4007013,10004203,20006225,40004233,100011775,200004367,400006267,1000005723,2000011035,',
        '00,000,000,000,0000,0000,6015,15053,22277,44073,103021,206035,402477,1005731,2003425,4007061,10004221,20006231,40004253,100012107,200004433,400006363,1000005731,2000011131,',
        '00,000,000,000,0000,0000,6031,15063,22301,40071,103035,206041,402543,1005761,2003473,4007147,10004227,20006237,40004255,100012175,200004435,400006437,1000005767,2000011145,',
        '00,000,000,000,0000,0000,6037,15151,22307,44133,103053,206151,402545,1006113,2003505,4007153,10004253,20006243,40004301,100012503,200004447,400006563,1000006017,2000011223,',
        '00,000,000,000,0000,0000,6127,15213,22313,44141,103125,206161,402557,1006161,2003511,4007203,10004271,20006317,40004307,100012517,200004453,400006633,1000006137,2000011303,',
        '00,000,000,000,0000,0000,6141,15321,22343,44147,103131,206173,402623,1006173,2003527,4007247,10004337,20006327,40004325,100012527,200004501,400006653,1000006223,2000011311,',
        '00,000,000,000,0000,0000,6153,15341,22411,44177,103145,206215,402645,1006355,2003605,4007323,10004361,20006413,40004411,100012611,200004543,400006707,1000006245,2000011363,',
        '00,000,000,000,0000,0000,6163,15365,22427,44203,103175,206225,402673,1006377,2003621,4007337,10004373,20006457,40004441,100012653,200004557,400006751,1000006341,2000011443,',
        '00,000,000,000,0000,0000,6205,15413,22435,44343,103201,206243,402755,1006605,2003635,4007463,10004465,20006467,40004471,100013153,200004623,400007001,1000006371,2000011535,',
        '00,000,000,000,0000,0000,6211,15423,22441,44435,103251,206257,403005,1006627,2003757,4007513,10004531,20006475,40004525,100013233,200004727,400007023,1000006401,2000011671,',
        '00,000,000,000,0000,0000,6227,15437,22455,44455,103257,206363,403035,1006633,2003775,4007561,10004545,20006521,40004545,100013417,200004747,400007133,1000006535,2000011707,',
        '00,000,000,000,0000,0000,6233,15527,22471,44471,103267,206503,404001,1006663,2023001,4062001,10174001,20160001,40040001,100320001,201000001,400700001,1002600001,2002000001,',
        '00,000,000,000,0000,0000,6235,15621,22523,44551,103303,206603,406201,1022401,2025001,4133001,10302001,20304001,40260001,101120001,202300001,401500001,1005400001,2007000001,',
        '00,000,000,000,0000,0000,6263,15647,22525,44567,103333,206617,407001,1024401,2046001,4171001,10354001,20640001,40520001,103160001,202440001,405400001,1006400001,2046000001,',
        '00,000,000,000,0000,0000,6277,15677,22543,44607,103377,206723,410001,1031001,2052001,4203001,10364001,21060001,40540001,105100001,203200001,406100001,1022400001,2070000001,',
        '00,000,000,000,0000,0000,6307,15701,22561,44741,104001,211101,414201,1035201,2054001,4221001,10414001,21254001,40610001,105320001,204300001,412200001,1034600001,2103000001,',
        '00,000,000,000,0000,0000,6315,15723,22567,45201,104141,211201,415001,1036401,2064001,4265001,10442001,21470001,40620001,105340001,204500001,416000001,1036400001,2117000001,',
        '00,000,000,000,0000,0000,6323,16005,22607,45511,105701,212641,421401,1037001,2070001,4304001,10444001,21530001,41000001,106400001,204600001,420300001,1051000001,2131400001,',
        '00,000,000,000,0000,0000,6325,16021,22613,45641,106041,216141,422401,1046001,2103001,4307001,10742001,21740001,41110001,107710001,205400001,431600001,1054000001,2134400001,',
        '00,000,000,000,0000,0000,6343,16027,22625,45761,106641,216601,427401,1053201,2111001,4325001,11030001,22110001,41360001,110650001,211700001,432000001,1060400001,0000000000,',
        '00,000,000,000,0000,0000,6351,16047,23021,46011,107241,217041,430401,1053401,2117001,4346001,11104001,22264001,41500001,111040001,214200001,433100001,1062000001,0000000000,',
        '00,000,000,000,0000,0000,6367,16115,23261,46321,107301,217701,433401,1060401,2121001,4357001,11120001,22404001,41720001,111320001,214700001,436400001,1066400001,0000000000,',
        '00,000,000,000,0000,0000,6403,16207,23451,46461,110141,221101,437001,1063401,2122001,4400001,11344001,22440001,42060001,111760001,215500001,441100001,1105000001,0000000000,',
        '00,000,000,000,0000,0000,6417,16237,23621,46521,110501,224101,440001,1067001,2133001,4405001,11404001,22614001,42240001,112320001,216500001,442200001,1113200001,0000000000,',
        '00,000,000,000,0000,0000,6435,16245,23641,46701,111641,226141,441401,1070601,2135001,4412001,11410001,22660001,42420001,113300001,217040001,443000001,1121000001,0000000000,',
        '00,000,000,000,0000,0000,6447,16273,23761,47001,112541,226501,450401,1075001,2142001,4456001,11522001,23114001,43340001,113660001,220000001,447400001,1122000001,0000000000,',
        '00,000,000,000,0000,0000,6455,16305,24061,47111,113301,226601,454001,1077201,2165001,4501001,11642001,23150001,44110001,114040001,221040001,450100001,1125400001,0000000000,',
        '00,000,000,000,0000,0000,6501,16311,24411,47121,114041,230201,456401,1077401,2203001,4504001,11660001,23364001,44210001,117610001,221200001,450200001,1127000001,0000000000,',
        '00,000,000,000,0000,0000,6507,16317,24421,50241,114701,234001,460201,1101401,2211001,4540001,12000001,23370001,44300001,120060001,226300001,456200001,1131200001,0000000000,',
        '00,000,000,000,0000,0000,6525,16363,24501,50661,115141,234441,461001,1104401,2227001,4545001,12060001,23400001,44440001,121020001,226500001,457300001,1133000001,0000000000,',
        '00,000,000,000,0000,0000,6531,16407,24601,50721,115501,236701,462001,1116201,2236001,4562001,12170001,23424001,45020001,121320001,227400001,461000001,1134200001,0000000000,',
        '00,000,000,000,0000,0000,6543,16443,25041,51261,116601,237601,467001,1123201,2255001,4601001,12210001,23724001,45320001,122020001,234600001,461600001,1137400001,0000000000,',
        '00,000,000,000,0000,0000,6557,16503,25151,51321,117041,241201,472201,1123401,2256001,4631001,12300001,24060001,46200001,122100001,235400001,463100001,1145200001,0000000000,',
        '00,000,000,000,0000,0000,6561,16521,25161,51761,120601,243241,474401,1127001,2266001,4654001,12322001,24170001,47110001,122200001,235700001,464300001,1145400001,0000000000,',
        '00,000,000,000,0000,0000,6623,16533,25251,52341,121101,243441,500601,1136001,2302001,4675001,12344001,24344001,47240001,124160001,237300001,472400001,1151400001,0000000000,',
        '00,000,000,000,0000,0000,6637,16565,25261,52621,121641,244201,502201,1140401,2320001,4706001,12402001,24630001,47440001,125720001,237600001,475500001,1157200001,0000000000,',
        '00,000,000,000,0000,0000,6651,16605,25401,52701,121701,245441,504401,1143201,2331001,4711001,12404001,24710001,47600001,126600001,240600001,477400001,1161400001,0000000000,',
        '00,000,000,000,0000,0000,6673,16611,25511,53061,122201,247201,506001,1147001,2345001,4724001,12524001,25114001,50600001,127320001,242400001,502400001,1172000001,0000000000,',
        '00,000,000,000,0000,0000,6675,17025,26041,53301,122401,247641,511001,1157201,2351001,4755001,12622001,25124001,50660001,127400001,243000001,503500001,1174600001,0000000000,',
        '00,000,000,000,0000,0000,6711,17031,26101,54041,123141,250201,513201,1170401,2375001,4756001,12660001,25520001,50720001,130010001,243600001,504400001,1176400001,0000000000,',
        '00,000,000,000,0000,0000,6727,17057,26161,54101,124201,250641,515201,1202201,2412001,5006001,12704001,25664001,51040001,131210001,244700001,507200001,1203000001,0000000000,',
        '00,000,000,000,0000,0000,6733,17105,26321,54641,125141,251141,520201,1204201,2414001,5022001,12734001,25744001,51320001,131660001,247100001,511500001,1204400001,0000000000,',
        '00,000,000,000,0000,0000,6741,17121,26341,55111,126001,253041,524001,1206601,2417001,5140001,13002001,26144001,51340001,132110001,247200001,516100001,1215200001,0000000000,',
        '00,000,000,000,0000,0000,6747,17147,26451,55301,126441,260041,531201,1215201,2427001,5216001,13174001,26150001,51400001,132720001,250200001,522600001,1221000001,0000000000,',
        '00,000,000,000,0000,0000,6765,17163,26611,55741,127401,261141,531401,1216401,2442001,5225001,13250001,26414001,51510001,133100001,253040001,530500001,1224600001,0000000000,',
        '00,000,000,000,0000,0000,7005,17217,26761,56061,130641,261601,532401,1217001,2456001,5246001,13320001,26520001,51540001,133620001,253100001,533500001,1226400001,0000000000,',
        '00,000,000,000,0000,0000,7035,17343,27051,56111,131301,263641,534201,1226201,2463001,5275001,13364001,26664001,51760001,134420001,253700001,536000001,1232200001,0000000000,',
        '00,000,000,000,0000,0000,7041,17421,27111,56241,131601,264001,536001,1232201,2507001,5305001,13460001,26724001,52160001,135460001,255700001,536500001,1251200001,0000000000,',
        '00,000,000,000,0000,0000,7047,17433,27141,56301,132001,265401,540401,1245201,2551001,5365001,13504001,27324001,52510001,136540001,256040001,542600001,1252400001,0000000000,',
        '00,000,000,000,0000,0000,7053,17447,27221,57201,133041,266201,541001,1247001,2561001,5374001,13534001,27454001,52610001,136620001,260100001,544000001,1253000001,0000000000,',
        '00,000,000,000,0000,0000,7063,17561,27411,57541,133201,266701,542001,1271001,2564001,5431001,13570001,27500001,53360001,136760001,260400001,553600001,1261400001,0000000000,',
        '00,000,000,000,0000,0000,7071,17631,27421,60211,133641,270141,546201,1275201,2575001,5445001,13610001,27624001,54020001,137050001,260700001,555000001,1264400001,0000000000,',
        '00,000,000,000,0000,0000,7107,17673,27501,60411,134141,270601,550001,1305401,2623001,5451001,13700001,27644001,54400001,137360001,262600001,556600001,1312200001,0000000000,',
        '00,000,000,000,0000,0000,7113,17675,27661,60421,134241,272201,555001,1310001,2634001,5462001,13744001,30000001,55000001,137420001,264000001,561200001,1327200001,0000000000,',
        '00,000,000,000,0000,0000,7125,17711,30111,60501,135201,272401,557201,1317401,2654001,5521001,14042001,30044001,55140001,137710001,264500001,562400001,1330200001,0000000000,',
        '00,000,000,000,0000,0000,7137,00000,30221,61461,135401,272641,560601,1322201,2662001,5550001,14134001,30300001,55210001,140220001,265400001,571600001,1332000001,0000000000,',
        '00,000,000,000,0000,0000,7161,00000,30241,61611,136701,273501,561201,1323001,2673001,5572001,14154001,30330001,55440001,141040001,267300001,573100001,1341200001,0000000000,',
        '00,000,000,000,0000,0000,7173,00000,30301,61621,137141,273601,562201,1334001,2705001,5666001,14204001,30344001,55660001,141250001,270440001,574500001,1350400001,0000000000,',
        '00,000,000,000,0000,0000,7175,00000,30561,61641,137441,274401,564201,1334601,2714001,5671001,14270001,30420001,55740001,141700001,271040001,575200001,1352000001,0000000000,',
        '00,000,000,000,0000,0000,7201,00000,30651,62011,137601,275001,570201,1341201,2717001,5713001,14330001,30514001,56060001,142610001,271700001,603000001,1352600001,0000000000,',
        '00,000,000,000,0000,0000,7223,00000,30711,62101,140001,276241,571001,1341401,2735001,6027001,14360001,31010001,56660001,143300001,272040001,604100001,1355200001,0000000000,',
        '00,000,000,000,0000,0000,7237,00000,30741,62401,140441,276441,576401,1360401,2736001,6035001,14402001,31064001,57010001,145140001,274400001,614600001,1363200001,0000000000,',
        '00,000,000,000,0000,0000,7243,00000,31011,62621,141401,301101,602401,1371401,2753001,6041001,14440001,31504001,57200001,145660001,277100001,617000001,1363400001,0000000000,',
        '00,000,000,000,0000,0000,7273,00000,31201,63421,141541,301541,603001,1374201,2760001,6074001,14514001,31540001,57340001,146560001,303300001,617500001,1406000001,0000000000,',
        '00,000,000,000,0000,0000,7317,00000,31251,63601,142041,301701,604201,1407201,2777001,6102001,14530001,31610001,60140001,147520001,304200001,620400001,1425200001,0000000000,',
        '00,000,000,000,0000,0000,7335,00000,31521,63721,142641,302541,607401,1426201,3012001,6104001,14550001,31640001,60300001,147700001,306440001,620700001,1426200001,0000000000,',
        '00,000,000,000,0000,0000,7363,00000,31701,64021,143301,303301,610401,1436001,3024001,6240001,14574001,32054001,61160001,150540001,307700001,621500001,1427000001,0000000000,',
        '00,000,000,000,0000,0000,7371,00000,32011,64641,144101,303441,612001,1441001,3033001,6245001,14674001,32130001,61200001,151600001,311000001,634400001,1434200001,0000000000,',
        '00,000,000,000,0000,0000,7413,00000,32101,65001,144401,303501,615201,1446201,3060001,6254001,14710001,32260001,61340001,152360001,311300001,635300001,1436000001,0000000000,',
        '00,000,000,000,0000,0000,7431,00000,32151,65121,146241,305141,616401,1446401,3102001,6267001,14720001,32424001,61460001,152650001,311440001,636300001,1444600001,0000000000,',
        '00,000,000,000,0000,0000,7461,00000,32311,65601,146301,305601,623201,1466601,3110001,6311001,15054001,32670001,62160001,153150001,313040001,641600001,1457200001,0000000000,',
        '00,000,000,000,0000,0000,7467,00000,32461,65741,147641,307041,625401,1470201,3120001,6314001,15224001,32724001,63000001,153260001,313400001,642300001,1462200001,0000000000,',
        '00,000,000,000,0000,0000,7535,00000,32641,66301,150701,310641,630001,1501001,3125001,6317001,15242001,33030001,63600001,154000001,314300001,643200001,1473400001,0000000000,',
        '00,000,000,000,0000,0000,7553,00000,33001,66411,151241,312001,631401,1505201,3131001,6360001,15260001,33050001,63660001,154550001,316100001,645400001,1505200001,0000000000,',
        '00,000,000,000,0000,0000,7555,00000,33111,66661,151501,312301,641001,1510601,3143001,6366001,15274001,33264001,64200001,155400001,316400001,651100001,1512400001,0000000000,',
        '00,000,000,000,0000,0000,7565,00000,33121,67011,151601,313541,647001,1514201,3154001,6372001,15334001,33330001,65000001,155620001,320100001,652400001,1533400001,0000000000,',
        '00,000,000,000,0000,0000,7603,00000,33221,67101,152141,313641,652201,1521401,3176001,6407001,15364001,33344001,65120001,156520001,322600001,653300001,1534000001,0000000000,',
        '00,000,000,000,0000,0000,7621,00000,33441,67201,152301,314501,654401,1523001,3202001,6457001,15430001,33360001,65210001,157120001,323200001,653500001,1536200001,0000000000,',
        '00,000,000,000,0000,0000,7627,00000,33501,67401,154301,317141,657401,1525001,3213001,6506001,15510001,33544001,66210001,157240001,323700001,662200001,1536400001,0000000000,',
        '00,000,000,000,0000,0000,7633,00000,33561,67461,154501,317441,661201,1546601,3223001,6512001,15620001,33550001,66410001,160400001,324440001,663300001,1542200001,0000000000,',
        '00,000,000,000,0000,0000,7647,00000,33721,67621,155541,321301,661401,1550401,3245001,6547001,15654001,33650001,66440001,161050001,327600001,664100001,1544400001,0000000000,',
        '00,000,000,000,0000,0000,7655,00000,33741,70311,155641,321441,667401,1554001,3262001,6611001,15670001,33770001,66500001,161120001,330440001,664700001,1550400001,0000000000,',
        '00,000,000,000,0000,0000,7665,00000,34151,70341,156101,322301,672001,1556401,3264001,6621001,15700001,34004001,66660001,161410001,334700001,670200001,1556200001,0000000000,',
        '00,000,000,000,0000,0000,7715,00000,34161,70461,157241,322601,673201,1560201,3275001,6713001,15742001,34150001,67010001,162060001,336300001,670400001,1565400001,0000000000,',
        '00,000,000,000,0000,0000,7723,00000,34261,70641,160401,326701,674001,1563201,3336001,6740001,16020001,34214001,67100001,162410001,337200001,671000001,1572200001,0000000000,',
        '00,000,000,000,0000,0000,7745,00000,34311,71061,161241,327501,676201,1570001,3347001,6746001,16200001,34250001,67260001,162420001,337700001,674600001,1573000001,0000000000,',
        '00,000,000,000,0000,0000,7751,00000,34341,71301,161301,335241,700201,1570601,3355001,6751001,16244001,34304001,67760001,163510001,342500001,676400001,1600400001,0000000000,']

    # retrieve the number of rows of K
    num_row = np.shape(K)[0]

    "num_pol value control"

    if num_pol < 1 or num_pol > num_row:
        print('ERROR: num_pol must be an integer value in the range [1, %.d]' % (num_row,))
        data = np.nan
        err_flag = 1
        return data, err_flag

    # PrimPol contains the generating polynomial of the specified degree (deg) in
    # binary notation

    # initialization of PrimPol
    # define a switcher dictionary for the switch case
    # index = deg; first tuple argument is PrimPol (a matrix);
    # 2nd tuple argument is the limit [a list]

    switcher = {
        5: (100 * np.ones((num_row, 6)).astype(int), [1, 2]),
        6: (100 * np.ones((num_row, 9)).astype(int), [4, 6]),
        7: (100 * np.ones((num_row, 9)).astype(int), [8, 10]),
        8: (100 * np.ones((num_row, 9)).astype(int), [12, 14]),
        9: (100 * np.ones((num_row, 12)).astype(int), [16, 19]),
        10: (100 * np.ones((num_row, 12)).astype(int), [21, 24]),
        11: (100 * np.ones((num_row, 12)).astype(int), [26, 29]),
        12: (100 * np.ones((num_row, 15)).astype(int), [31, 35]),
        13: (100 * np.ones((num_row, 15)).astype(int), [37, 41]),
        14: (100 * np.ones((num_row, 15)).astype(int), [43, 47]),
        15: (100 * np.ones((num_row, 18)).astype(int), [49, 54]),
        16: (100 * np.ones((num_row, 18)).astype(int), [56, 61]),
        17: (100 * np.ones((num_row, 18)).astype(int), [63, 68]),
        18: (100 * np.ones((num_row, 21)).astype(int), [70, 76]),
        19: (100 * np.ones((num_row, 21)).astype(int), [78, 84]),
        20: (100 * np.ones((num_row, 21)).astype(int), [86, 92]),
        21: (100 * np.ones((num_row, 24)).astype(int), [94, 101]),
        22: (100 * np.ones((num_row, 24)).astype(int), [103, 110]),
        23: (100 * np.ones((num_row, 24)).astype(int), [112, 119]),
        24: (100 * np.ones((num_row, 27)).astype(int), [121, 129]),
        25: (100 * np.ones((num_row, 27)).astype(int), [131, 139]),
        26: (100 * np.ones((num_row, 27)).astype(int), [141, 149]),
        27: (100 * np.ones((num_row, 30)).astype(int), [151, 160]),
        28: (100 * np.ones((num_row, 30)).astype(int), [162, 171])
    }
    # retrieve PrimPol and lim values from switcher cases using the deg in use
    PrimPol = switcher.get(deg)[0]
    lim = switcher.get(deg)[1]

    # convert the octal values contained in K to binary, for the specified degree (deg)
    # for all the rows in K
    for i in range(num_row):
        # considering only the values related to 'lim', which is the value in K
        for j in range(lim[0], lim[1] + 1):
            # transform to binary the values in K
            tmp = dec2bin(float(K[i][j - 1]))
            # adjust the length of binary sequence if it is less than 3 digits
            if len(tmp) < 3:
                # fill with zeros
                tmp = tmp.zfill(3)
            # initialize a to 0
            a = 0
            # increment a for all the values of PrimPol different from 100
            while PrimPol[i][a] != 100:
                a += 1
            # assign the correct values to PrimPol
            for k in range(a, (a + len(tmp) - 1) + 1):
                PrimPol[i][k] = int(tmp[k - a])

    "PRBS GENERATOR"
    data = np.nan * (np.zeros((num_PRBS, 2 ** deg - 1))).astype(int)

    # Initialize shift register
    sr = (np.ones(deg)).astype(int)

    # Implementation of the backward counter
    pol_counter = num_pol
    PRBS_counter = 0
    flag = 0

    while PRBS_counter <= (num_PRBS - 1):

        # Check whether there are enough primitive polynomials different from all 0s
        if pol_counter > num_row:
            flag = 1
            pol_counter = 0

        if flag == 1 and pol_counter == num_pol:
            data = np.nan
            print('ERROR: not enough primitive polynomials (Please, increase PRBS degree)')
            err_flag = 1
            return data, err_flag

        # Generating PRBS
        # check if the two arrays are equal to all zeros
        arr1 = PrimPol[pol_counter - 1]
        arr2 = np.zeros((len(PrimPol[pol_counter - 1]))).astype(int)

        if not (short_circuit_check(arr1, arr2, len(arr1))):
            pos = find_ones(PrimPol[pol_counter - 1]).astype(int)
            for i in np.arange(start=0, stop=2 ** deg - 1):
                data[PRBS_counter][i] = int(sr[-1])
                tmp = sr[pos[0:-1]]
                tmp1 = sr[-1]
                for j in np.arange(start=len(tmp) - 1, stop=-1, step=-1):
                    tmp1 = (bool(tmp1) ^ bool(tmp[j]))
                sr[1:] = sr[:-1]
                sr[0] = tmp1

            pol_counter += 1
            PRBS_counter += 1
        else:
            pol_counter += 1

    # Transposition of data for column notation
    data_out = np.transpose(data.astype(int))

    if zero_pad:
        zero_array = (np.zeros(np.shape(data_out)[1])).astype(int)
        data_out = np.vstack((data_out, zero_array))

    return data_out, err_flag


" Define a short function which is equivalent to 'isequal' in Matlab " \
" in order to check all elements in array"


def short_circuit_check(a, b, n):
    L = int(len(a) / n)
    for i in range(n):
        j = i * L
        if not all(a[j:j + L] == b[j:j + L]):
            return False
    return True


" Define a function which returns the position of the ones inside the input vector"


def find_ones(x):
    # Input: x = input vector
    # Output: pos = vector containing the positions of the 1s in x vector

    i = 0
    while x[i] != 1:
        i += 1

    x1 = x[i:]
    x2_list = []
    j = 0
    for i in np.arange(start=len(x1) - 1, stop=-1, step=-1):
        x2_list.append(x1[i])
        j += 1
    x2 = np.array(x2_list)
    pos = np.zeros(len(x2[x2 == 1]) - 1).astype(int)
    k = 0
    for i in np.arange(start=1, stop=len(x2)):
        if x2[i] == 1:
            pos[k] = i - 1
            k += 1

    return pos
